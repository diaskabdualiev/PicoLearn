=========================================================
Учебный набор по MicroPython на базе Raspberry Pi Pico W
=========================================================

Вступление
----------
Данный набор уроков предназначен для начинающих разработчиков, которые хотят научиться 
программировать на языке MicroPython, создавать проекты с использованием микроконтроллера 
Raspberry Pi Pico W и освоить основы IoT (Internet of Things). В рамках этого курса 
предусмотрены практические занятия по веб-разработке, созданию Telegram-ботов, 
сбору данных в Google Sheets, а также работе с погодным API OpenWeatherMap.


Сильные стороны набора
----------------------
- **Доступное обучение**: Уроки рассчитаны на начальный уровень и не требуют 
  специальных знаний в электронике или программировании.
- **Пошаговый подход**: Каждый урок последовательно усложняется, 
  позволяя плавно осваивать новые функции и возможности.
- **Упор на практику**: Большинство занятий представляют собой реальные проекты 
  с использованием разнообразных сенсоров, исполнительных устройств и сетевых сервисов.
- **Интернет-возможности**: Raspberry Pi Pico W имеет встроенный Wi-Fi-модуль, 
  что даёт широкие возможности для создания веб-приложений, IoT-проектов, 
  интеграции с облачными сервисами (Google Sheets, OpenWeatherMap) и чат-ботами (Telegram).
- **Широкий спектр задач**: В процессе обучения вы научитесь работать с 
  веб-интерфейсами (HTML/JS), собирать и визуализировать данные в Google Sheets, 
  автоматизировать уведомления через Telegram-бот и использовать онлайн-сервисы для 
  получения погодной информации.

Для кого подходит этот набор
----------------------------
- **Ученики школ и вузов**: Для изучения основ микроэлектроники и программирования 
  в рамках учебных программ или кружков.
- **Хоббисты и энтузиасты**: Тем, кто любит собирать DIY-проекты и развивать 
  навыки в области IoT, роботов, автоматики.
- **Начинающие разработчики**: Желающие быстро окунуться в мир интернет-вещей, 
  но не имеющие глубокого бэкграунда в схемотехнике.
- **Все, кто интересуется веб-технологиями и автоматизацией**: Получение 
  практических навыков по созданию интерактивных веб-страниц, Telegram-ботов, 
  работе с API (OpenWeatherMap) и облачными таблицами (Google Sheets).

Компоненты набора
-----------------
.. list-table::
   :header-rows: 1
   :widths: 10 60 15
   :align: left

   * - №
     - Наименование
     - Количество
   * - 1
     - Raspberry Pi Pico W
     - 1 шт.
   * - 2
     - Адресное светодиодное кольцо (12 светодиодов WS2812)
     - 1 шт.
   * - 3
     - PIR-датчик
     - 1 шт.
   * - 4
     - Кнопка
     - 2 шт.
   * - 5
     - Потенциометр
     - 1 шт.
   * - 6
     - Датчик света
     - 1 шт.
   * - 7
     - OLED-дисплей (SSD1306)
     - 1 шт.
   * - 8
     - BME280
     - 1 шт.
   * - 9
     - MPU6050
     - 1 шт.
   * - 10
     - Сервопривод
     - 1 шт.




Итоговый учебный план на Raspberry Pi Pico W (15 уроков)
------------------------------------------------------------------------------------

Ниже перечислены уроки, каждый из которых задействует определённые 
компоненты (RGB-светодиод, WS2812, потенциометр, датчик освещённости, реле,
PIR-датчик, сервопривод, OLED-дисплей, BME280, MPU6050) и демонстрирует 
работу с различными интернет-технологиями: подключение к Wi-Fi, 
организация веб-интерфейса, взаимодействие с OpenWeatherMap, 
Telegram-ботами и Google Sheets.

1. **Wi-Fi: подключение к интернету**  

   - Настройка беспроводного соединения на Raspberry Pi Pico W.
   - Проверка подключения (пинг, базовый GET-запрос).

2. **Hello World: веб-сайт на Pico W**  

   - Создание простого веб-сервера, возвращающего «Hello, World!».
   - Проверка работы через браузер.

3. **Управление RGB-светодиодом через веб-интерфейс + потенциометр**  

   - Подключение обычного RGB-светодиода.
   - Создание страницы с кнопками или ползунками для изменения цвета.
   - Использование потенциометра для регулировки яркости или оттенка.

4. **Вывод данных датчика освещённости на веб-интерфейс**  

   - Считывание значений освещённости (через аналоговый вход).
   - Динамическое отображение данных на веб-странице.
   - Возможность дополнительно использовать потенциометр 
     (например, для калибровки порога освещённости).

5. **Вывод списка Wi-Fi устройств на веб-интерфейс** 

   - Сканирование доступных точек доступа.
   - Формирование списка SSID в реальном времени.

6. **Отображение IP-адреса и названия точки доступа при подключении**  

   - Автоматический вывод текущего IP-адреса и SSID на странице.
   - Отображение уровня сигнала (при необходимости).

7. **OpenWeatherMap: вывод данных о погоде на OLED-дисплей**  

   - Подключение SSD1306, вывод текста с API OpenWeatherMap.
   - Парсинг информации о температуре, описании погоды, влажности.

8. **Визуализация температуры из OpenWeatherMap на адресной ленте WS2812**  

   - Цветовое кодирование температуры (синий для холода, красный для жары).
   - Декоративные эффекты (анимации) на основе погодных данных.

9. **PIR-датчик: уведомление о движении с помощью WS2812**  

   - Реакция ленты (мигание, смена цвета) при срабатывании PIR-датчика.
   - Базовая «охранная» индикация.

10. **Telegram-бот: введение**  

    - Создание бота и получение токена.
    - Отправка и приём сообщений с Raspberry Pi Pico W.
    - Пример простой команды «/start» и ответ от бота.

11. **Управление сервоприводом через Telegram-бот**  

    - Подключение и ШИМ (PWM) для сервомотора.
    - Команды типа «/servo 90» для перемещения на заданный угол.

12. **Получение данных о температуре (BME280) через Telegram-бот**  

    - Подключение датчика BME280, считывание температуры/влажности/давления.
    - Ответ на команду «/temp» сообщением с актуальной температурой.

13. **PIR-датчик: уведомление о движении в Telegram**  

    - Отправка мгновенного уведомления о срабатывании датчика PIR.
    - Настройка задержек, чтобы избежать избыточных сообщений.

14. **MPU6050: уведомление о вибрации/наклоне в Telegram**  

    - Считывание акселерометра и гироскопа.
    - Уведомления при превышении заданного порога движения.

15. **Google Sheets: хранение данных о температуре**  

    - Автоматическая запись показаний BME280 в Google Sheets через скрипт.
    - Ведение журнала для последующего анализа и построения графиков.

-------------------------------------------------------------
В результате прохождения всех уроков вы научитесь:
- Подключать Raspberry Pi Pico W к Wi-Fi и управлять им через веб-интерфейс.
- Работать с основными датчиками (освещённости, PIR, BME280, MPU6050) и
  исполнительными устройствами (RGB-светодиод, адресные светодиоды WS2812,
  сервопривод, реле).
- Создавать Telegram-ботов для управления и получения уведомлений в реальном времени.
- Использовать OpenWeatherMap для интеграции погодной информации в свои проекты.
- Сохранять данные в Google Sheets для дальнейшего анализа и визуализации.

Тем самым вы получите навыки по созданию комплексных IoT-проектов, 
умеющих взаимодействовать как с локальными датчиками и устройствами, 
так и с облачными сервисами и внешними API.